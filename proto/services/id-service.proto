syntax = "proto3";

option go_package="github.com/arandich/marketplace-proto/api/proto/services";

package marketplace;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "proto/types/id-types.proto";

service IdService {
  // Auth
  rpc Auth(AuthRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/v1/id/auth"
      body: "*"
    };
  };
  // IsPaymentAvailable
  rpc InitHold(InitHoldRequest) returns (InitHoldResponse) {
    option (google.api.http) = {
      post: "/v1/id/is-payment-available"
      body: "*"
    };
  };
  // GetUser
  rpc GetUser(google.protobuf.Empty) returns (GetUserResponse) {
    option (google.api.http) = {
      post: "/v1/id/get-user"
    };
  };
  // Register user
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse) {
    option (google.api.http) = {
      post: "/v1/id/register-user"
      body: "*"
    };
  };
}

message AuthRequest {
  string username = 1;
  string password = 2;
}

message AuthResponse {
  string jwt_token = 1;
  int64 expires_at = 2;
}

message InitHoldRequest {
  int64 amount = 1;
}

message InitHoldResponse {
  Hold hold = 1;
}

message GetUserResponse {
  User user = 1;
}

message RegisterUserRequest {
  string username = 1;
  string password = 2;
  optional int64 balance = 3;
}

message RegisterUserResponse {
  User user = 1;
}